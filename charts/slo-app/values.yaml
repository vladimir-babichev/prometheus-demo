ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: slo-app.demo
      paths: ["/"]

prometheus:
  alertRules:
    - alert: ServiceIsDown
      annotations:
        description: '{{ $labels.job }} service is unavailable.'
        summary: Service is down
      expr: version{job="slo-app"} != 1
      for: 1m
      labels:
        severity: critical

    - alert: NoTrafficFlow
      annotations:
        description: 'Service receive {{ $value}} rps, which is below threshold (50 rps).'
        summary: No traffic flow
      expr: rate(opencensus_io_http_server_request_count{job="slo-app"}[5m]) < 50
      for: 1m
      labels:
        severity: critical

    - alert: 90%ileResponseTime
      annotations:
        description: '90%ile response time is {{ $value }}, which is above threshold (0.005 sec).'
        summary: 90%ile response time
      expr: histogram_quantile(0.9, rate(opencensus_io_http_server_latency_bucket{job="slo-app"}[5m])) > 1
      for: 5m
      labels:
        severity: critical

    - alert: 99.9%ileResponseTime
      annotations:
        description: '99.9%ile response time is {{ $value }}, which is above threshold (2 msec).'
        summary: 99.9%ile response time
      expr: histogram_quantile(0.999, rate(opencensus_io_http_server_latency_bucket{job="slo-app"}[5m])) > 2
      for: 5m
      labels:
        severity: warning

    - alert: RequestsErrorRate
      annotations:
        description: 'Requests error rate is {{ $value }}%, which is above threshold (5%).'
        summary: SLO - Requests Error Rate
      expr: sli:errors_per_request:ratio_rate5m{job="slo-app"} * 100 > 5
      for: 1m
      labels:
        severity: critical

  recordRules:
    - record: sli:errors_per_request:ratio_rate5m
      expr: sum without(http_status) (rate(opencensus_io_http_server_response_count_by_status_code{job="slo-app", http_status !~ "2[0-9]{2}"}[5m])) / ignoring(pod) rate(opencensus_io_http_server_request_count{job="slo-app"}[5m])
