ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: metrics-app.demo
      paths: ["/"]

prometheus:
  alertRules:
    - alert: ServiceIsDown
      annotations:
        description: '{{ $labels.job }} service is unavailable.'
        summary: Service is down
      expr: version{job="metrics-app"} != 1
      for: 1m
      labels:
        severity: critical

    - alert: NoTrafficFlow
      annotations:
        description: 'Service receive {{ $value}} rps, which is below threshold (50 rps).'
        summary: No traffic flow
      expr: rate(http_requests_total{job="metrics-app", code=~"2[0-9]{2}"}[5m]) < 50
      for: 1m
      labels:
        severity: critical

    - alert: 90%ileResponseTime
      annotations:
        description: '90%ile response time is {{ $value }}, which is above threshold (0.005 sec).'
        summary: 90%ile response time
      expr: histogram_quantile(0.9, http_request_duration_seconds_bucket{job="metrics-app"}) > 0.005
      for: 5m
      labels:
        severity: critical

    - alert: 99%ileResponseTime
      annotations:
        description: '99%ile response time is {{ $value }}, which is above threshold (0.005 sec).'
        summary: 99%ile response time
      expr: histogram_quantile(0.99, http_request_duration_seconds_bucket{job="metrics-app"}) > 0.05
      for: 5m
      labels:
        severity: warning

    - alert: RequestsErrorRate
      annotations:
        description: 'Requests error rate is {{ $value }}%, which is above threshold (5%).'
        summary: SLO - Requests Error Rate
      expr: sli:errors_per_request:ratio_rate5m{job="metrics-app"} * 100 > 5
      for: 1m
      labels:
        severity: critical

  recordRules:
    - record: sli:errors_per_request:ratio_rate5m
      expr: (rate(http_requests_total{code!~"2[0-9]{2}",job="metrics-app"}[5m])) / ignoring(code) (sum without(code) (rate(http_requests_total{code=~"[0-9]{3}",job="metrics-app"}[5m])))
